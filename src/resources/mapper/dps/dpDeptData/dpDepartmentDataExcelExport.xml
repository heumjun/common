<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dpDepartmentDataExcelExport">  	
  	<select id="list" parameterType="java.util.HashMap" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
    SELECT ROWNUM AS rn, 
	       ORDER_BY,
	       DEPT_NAME,
	       T_EMP_CNT,
	       MH_A1,
	       MH_A2,
	        MH_A3,
	        MH_A4,
	        MH_A5,
	        MH_IN,
	        MH_OUT,
	        MH_DWG_SUM,
	        MH_B1,
	        MH_B2,
	        MH_B3,
	        MH_B4,
	        MH_B5,
	        MH_B6,
	        MH_DEDWG_SUM,
	        MH_CON_TOT,
	        MH_C1,
	        MH_C2,
	        MH_C3,
	        MH_DECON_SUM,
	        MH_TAKE,
	        MH_D1,
	        EMP_CNT,
	        NORMAL_TIME,
	        OVERTIME,
	        SPECIAL_TIME
	FROM(
    SELECT 		ORDER_BY ,
		       DWGDEPTNM as DEPT_NAME ,
		       CASE
		         WHEN (SELECT SUM(INSIDEWORKTIME)
		        FROM   CCC_CALENDAR
		        WHERE  WORKINGDAY BETWEEN TO_DATE(#{dateSelected_from}, 'YYYY-MM-DD') AND TO_DATE(#{dateSelected_to}, 'YYYY-MM-DD')) = 0 THEN 0
		         ELSE ROUND(ROUND(NORMAL_TIME, 0) / (SELECT SUM(INSIDEWORKTIME)
		                FROM   CCC_CALENDAR
		                WHERE  WORKINGDAY BETWEEN TO_DATE(#{dateSelected_from}, 'YYYY-MM-DD') AND TO_DATE(#{dateSelected_to}, 'YYYY-MM-DD')) , 1)
		       END AS T_EMP_CNT,
		       ROUND(MH_A1, 1) AS MH_A1 ,
		       ROUND(MH_A2, 1) AS MH_A2 ,
		       ROUND(MH_A3, 1) AS MH_A3 ,
		       ROUND(MH_A4, 1) AS MH_A4 ,
		       ROUND(MH_A5, 1) AS MH_A5 ,
		       ROUND(MH_IN, 1) AS MH_IN ,
		       ROUND(MH_OUT, 1) AS MH_OUT ,
		       ROUND(MH_DWG_SUM, 1) AS MH_DWG_SUM ,
		       ROUND(MH_B1, 1) AS MH_B1 ,
		       ROUND(MH_B2, 1) AS MH_B2 ,
		       ROUND(MH_B3, 1) AS MH_B3 ,
		       ROUND(MH_B4, 1) AS MH_B4 ,
		       ROUND(MH_B5, 1) AS MH_B5 ,
		       ROUND(MH_B6, 1) AS MH_B6 ,
		       ROUND(MH_DEDWG_SUM, 1) AS MH_DEDWG_SUM ,
		       ROUND(MH_CON_TOT, 1) AS MH_CON_TOT ,
		       ROUND(MH_C1, 1) AS MH_C1 ,
		       ROUND(MH_C2, 1) AS MH_C2 ,
		       ROUND(MH_C3, 1) AS MH_C3 ,
		       ROUND(MH_DECON_SUM, 1) AS MH_DECON_SUM ,
		       ROUND(MH_TAKE, 1) AS MH_TAKE ,
		       ROUND(MH_D1, 1) AS MH_D1 ,
		       CASE
		         WHEN DWGDEPTNM = '합계' THEN (SELECT F_GET_DEPT_EMP_CNT(#{dateSelected_from}, #{dateSelected_to}, 
		         <choose>
		            <when test="dept_code_list != null and dept_code_list.size > 0">
		                <foreach collection="dept_code_list" item="item" separator="," open="'" close="'">${item}</foreach>
		            </when>
		            <otherwise>'%'</otherwise>
				 </choose>, 
		         <choose>
		            <when test="project_no_list != null and project_no_list.size > 0">
		                <foreach collection="project_no_list" item="item" separator="," open="'" close="'">${item}</foreach>
		            </when>
		            <otherwise>'%'</otherwise>
				 </choose>)
		        FROM   DUAL)
		         ELSE (SELECT F_GET_DEPT_EMP_CNT(#{dateSelected_from}, #{dateSelected_to}, DEPT_CODE, 
		         <choose>
		            <when test="project_no_list != null and project_no_list.size > 0">
		                <foreach collection="project_no_list" item="item" separator="," open="'" close="'">${item}</foreach>
		            </when>
		            <otherwise>'%'</otherwise>
				 </choose>)
		        FROM   DUAL)
		       END AS EMP_CNT ,
		       ROUND(NORMAL_TIME, 1) AS NORMAL_TIME ,
		       ROUND(OVERTIME, 1) AS OVERTIME ,
		       ROUND(SPECIAL_TIME, 1) AS SPECIAL_TIME
		FROM   (SELECT '1' AS ORDER_BY ,
		               '합계' AS DWGDEPTNM ,
		               SUM(OP.MH_A1) AS MH_A1 ,
		               SUM(OP.MH_A2) AS MH_A2 ,
		               SUM(OP.MH_A3) AS MH_A3 ,
		               SUM(OP.MH_A4) AS MH_A4 ,
		               SUM(OP.MH_A5) AS MH_A5 ,
		               SUM(OP.MH_IN) AS MH_IN ,
		               SUM(OP.MH_OUT) AS MH_OUT ,
		               SUM(OP.MH_IN) + SUM(OP.MH_OUT) AS MH_DWG_SUM ,
		               SUM(OP.MH_B1) AS MH_B1 ,
		               SUM(OP.MH_B2) AS MH_B2 ,
		               SUM(OP.MH_B3) AS MH_B3 ,
		               SUM(OP.MH_B4) AS MH_B4 ,
		               SUM(OP.MH_B5) AS MH_B5 ,
		               SUM(OP.MH_B6) AS MH_B6 ,
		               SUM(OP.MH_B1) + SUM(OP.MH_B2) + SUM(OP.MH_B3) + SUM(OP.MH_B4) + SUM(OP.MH_B5) + SUM(OP.MH_B6) AS MH_DEDWG_SUM ,
		               SUM(OP.MH_IN) + SUM(OP.MH_OUT) + SUM(OP.MH_B1) + SUM(OP.MH_B2) + SUM(OP.MH_B3) + SUM(OP.MH_B4) + SUM(OP.MH_B5) + SUM(OP.MH_B6) AS MH_CON_TOT ,
		               SUM(OP.MH_C1) AS MH_C1 ,
		               SUM(OP.MH_C2) AS MH_C2 ,
		               SUM(OP.MH_C3) AS MH_C3 ,
		               SUM(OP.MH_C1) + SUM(OP.MH_C2) + SUM(OP.MH_C3) AS MH_DECON_SUM ,
		               SUM(OP.MH_IN) + SUM(OP.MH_OUT) + SUM(OP.MH_B1) + SUM(OP.MH_B2) + SUM(OP.MH_B3) + SUM(OP.MH_B4) + SUM(OP.MH_B5) + SUM(OP.MH_B6) + SUM(OP.MH_C1) + SUM(OP.MH_C2) + SUM(OP.MH_C3) AS MH_TAKE ,
		               SUM(OP.MH_D1) AS MH_D1 ,
		               SUM(NORMAL_TIME) AS NORMAL_TIME ,
		               SUM(OVERTIME) AS OVERTIME ,
		               SUM(SPECIAL_TIME) AS SPECIAL_TIME ,
		               '%' AS DEPT_CODE
		        FROM   (SELECT DEPT_CODE ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A1 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A2' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A2 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A3' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A3 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A4' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A4 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A5' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A5 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 1) = 'A' THEN
		                                         CASE
		                                           WHEN OP_CODE &lt;&gt; 'A13' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         END
		                                         ELSE 0
		                                       END AS MH_IN ,
		                       0 AS MH_OUT ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B1 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B2' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B2 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B3' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B3 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B4' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B4 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B5' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B5 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B6' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B6 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'C1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_C1 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'C2' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_C2 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'C3' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_C3 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'D1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_D1 ,
		                       SUM(NORMAL_TIME) AS NORMAL_TIME ,
		                       SUM(OVERTIME) AS OVERTIME ,
		                       SUM(SPECIAL_TIME) AS SPECIAL_TIME
		                FROM   (SELECT EMPLOYEE_NO ,
		                               DEPT_CODE ,
		                               OP_CODE ,
		                               PLM_MH * MH_FACTOR AS PLM_MH ,
		                               NORMAL_TIME * MH_FACTOR AS NORMAL_TIME ,
		                               OVERTIME * MH_FACTOR AS OVERTIME ,
		                               SPECIAL_TIME * MH_FACTOR AS SPECIAL_TIME
		                        FROM   (SELECT EMPLOYEE_NO ,
		                                       DEPT_CODE ,
		                                       OP_CODE ,
		                                       PLM_MH ,
		                                       NORMAL_TIME ,
		                                       OVERTIME ,
		                                       SPECIAL_TIME ,
		                                                                       CASE
		                                                                         WHEN CAREER_MONTHS IS NULL THEN 1
		                                                                         ELSE (SELECT FACTOR_VALUE
		                                        FROM   (SELECT CAREER_MONTH_FROM,
		                                                       CAREER_MONTH_TO,
		                                                       FACTOR_VALUE
		                                                FROM   PLM_DESIGN_MH_FACTOR
		                                                WHERE  1 = 1
		                                                AND    CASE_NO = #{factorCaseList} )
		                                        WHERE  CAREER_MONTH_FROM &lt;= CAREER_MONTHS
		                                        AND    NVL(CAREER_MONTH_TO, 9999) &gt;= CAREER_MONTHS )
		                                                                       END AS MH_FACTOR
		                                FROM   (SELECT DM.EMPLOYEE_NO ,
		                                               DM.DEPT_CODE ,
		                                               DM.OP_CODE ,
		                                               SUM(DM.DIRECT_MH + DM.DIST_MH) AS PLM_MH ,
		                                               SUM(DM.NORMAL_TIME) AS NORMAL_TIME ,
		                                               SUM(DM.OVERTIME) AS OVERTIME ,
		                                               SUM(DM.SPECIAL_TIME) AS SPECIAL_TIME ,
		                                               ((TO_CHAR(DM.WORK_DAY, 'YYYY') - TO_CHAR(CS.DESIGN_APPLY_DATE, 'YYYY'))* 12 + (TO_CHAR(DM.WORK_DAY, 'MM') - TO_CHAR(CS.DESIGN_APPLY_DATE, 'MM'))) +
		                                                                                       CASE
		                                                                                         WHEN TO_CHAR(CS.DESIGN_APPLY_DATE, 'DD') &lt;= 15 THEN 1
		                                                                                         WHEN TO_CHAR(CS.DESIGN_APPLY_DATE, 'DD') &gt; 15 THEN 0
		                                                                                       END + NVL(ROUND(CS.BEFORE_ENTRANCE_CAREER * 12, 0), 0) AS CAREER_MONTHS
		                                        FROM   PLM_DESIGN_MH_CLOSE DM ,
		                                               CCC_SAWON CS
		                                        WHERE  DM.EMPLOYEE_NO = CS.EMPLOYEE_NUM(+)
		                                        AND    DM.WORK_DAY &gt;= TO_DATE(#{dateSelected_from}, 'YYYY-MM-DD')
		                                        AND    DM.WORK_DAY &lt;= TO_DATE(#{dateSelected_to}, 'YYYY-MM-DD')
		                                        <if test="project_no_list != null and project_no_list.size > 0">
		                                            AND    DM.PROJECT_NO IN  (<foreach collection="project_no_list" item="item" separator=",">#{item}</foreach>)
		                                        </if>
		                                        GROUP BY DM.EMPLOYEE_NO, DM.DEPT_CODE, DM.OP_CODE, DM.WORK_DAY, CS.DESIGN_APPLY_DATE, CS.BEFORE_ENTRANCE_CAREER ) ) )
		                GROUP BY DEPT_CODE, OP_CODE
		                UNION ALL
		SELECT ORH.REQUEST_DEPT AS DEPT_CODE ,
		                       0 AS MH_A1 ,
		                       0 AS MH_A2 ,
		                       0 AS MH_A3 ,
		                       0 AS MH_A4 ,
		                       0 AS MH_A5 ,
		                       0 AS MH_IN ,
		                       SUM(OCA.COMPLETED_MAN_HOUR) AS MH_OUT ,
		                       0 AS MH_B1 ,
		                       0 AS MH_B2 ,
		                       0 AS MH_B3 ,
		                       0 AS MH_B4 ,
		                       0 AS MH_B5 ,
		                       0 AS MH_B6 ,
		                       0 AS MH_C1 ,
		                       0 AS MH_C2 ,
		                       0 AS MH_C3 ,
		                       0 AS MH_D1 ,
		                       0 AS NORMAL_TIME ,
		                       0 AS OVERTIME ,
		                       0 AS SPECIAL_TIME
		                FROM   OUT_COMPLETED_AMOUNT OCA,
		                       OUT_CONTRACTS OC,
		                       OUT_REQUEST_HEADERS ORH,
		                       OUT_CODE_LINES OCL,
		                       DCC_DEPTCODE DEPT
		                WHERE  ORH.REQUEST_DEPT = DEPT.DEPTCODE
		                AND    OC.REQUEST_NUM = ORH.REQUEST_NUM
		                AND    ORH.REQUEST_CODE = OCL.COMMON_CODE
		                AND    OCL.INDEX_CODE = 'OUT21'
		                AND    NVL(OCL.END_DATE, SYSDATE) &gt; TRUNC(SYSDATE)
		                AND    OCL.CODE_VALUE = '도면비'
		                AND    OCA.CONTRACT_NUM = OC.CONTRACT_NUM
		                AND    ORH.REQUEST_DEPT NOT IN (SELECT DEPTCODE
		                        FROM   DCC_DEPTCODE A ,
		                               DCC_DWGDEPTCODE T
		                        WHERE  A.DWGDEPTCODE = T.DWGDEPTCODE
		                        AND    T.DWGDEPTCODE = '000049' ) 
		                <if test="project_no_list != null and project_no_list.size > 0">
		                    AND    ORH.PROJECT_NO IN (<foreach collection="project_no_list" item="item" separator=",">#{item}</foreach>)
		                </if>
		                AND    OCA.COMPLETED_DATE &gt;= TO_DATE(TO_CHAR(TO_DATE(#{dateSelected_from}, 'YYYY-MM-DD'), 'YYYYMM'), 'YYYYMM')
		                AND    OCA.COMPLETED_DATE &lt;= LAST_DAY(TO_DATE(#{dateSelected_to}, 'YYYY-MM-DD'))
		                GROUP BY ORH.REQUEST_DEPT ) OP ,
		               (SELECT DEPT_CODE AS DWGDEPTCODE,
		                       DEPT_NAME AS DWGDEPTNM
		                FROM   STX_COM_INSA_DEPT@STXERP.STXSHIP.CO.KR) DW
		        WHERE  OP.DEPT_CODE = DW.DWGDEPTCODE 
		         <if test="dept_code_list != null and dept_code_list.size > 0">
				            AND    DW.DWGDEPTCODE IN (<foreach collection="dept_code_list" item="item" separator=",">#{item}</foreach>)
				 </if>
		        UNION ALL
		SELECT '2' AS ORDER_BY ,
		               DW.DWGDEPTNM AS DEPT_NAME ,
		               SUM(OP.MH_A1) AS MH_A1 ,
		               SUM(OP.MH_A2) AS MH_A2 ,
		               SUM(OP.MH_A3) AS MH_A3 ,
		               SUM(OP.MH_A4) AS MH_A4 ,
		               SUM(OP.MH_A5) AS MH_A5 ,
		               SUM(OP.MH_IN) AS MH_IN ,
		               SUM(OP.MH_OUT) AS MH_OUT ,
		               SUM(OP.MH_IN) + SUM(OP.MH_OUT) AS MH_DWG_SUM ,
		               SUM(OP.MH_B1) AS MH_B1 ,
		               SUM(OP.MH_B2) AS MH_B2 ,
		               SUM(OP.MH_B3) AS MH_B3 ,
		               SUM(OP.MH_B4) AS MH_B4 ,
		               SUM(OP.MH_B5) AS MH_B5 ,
		               SUM(OP.MH_B6) AS MH_B6 ,
		               SUM(OP.MH_B1) + SUM(OP.MH_B2) + SUM(OP.MH_B3) + SUM(OP.MH_B4) + SUM(OP.MH_B5) + SUM(OP.MH_B6) AS MH_DEDWG_SUM ,
		               SUM(OP.MH_IN) + SUM(OP.MH_OUT) + SUM(OP.MH_B1) + SUM(OP.MH_B2) + SUM(OP.MH_B3) + SUM(OP.MH_B4) + SUM(OP.MH_B5) + SUM(OP.MH_B6) AS MH_CON_TOT ,
		               SUM(OP.MH_C1) AS MH_C1 ,
		               SUM(OP.MH_C2) AS MH_C2 ,
		               SUM(OP.MH_C3) AS MH_C3 ,
		               SUM(OP.MH_C1) + SUM(OP.MH_C2) + SUM(OP.MH_C3) AS MH_DECON_SUM ,
		               SUM(OP.MH_IN) + SUM(OP.MH_OUT) + SUM(OP.MH_B1) + SUM(OP.MH_B2) + SUM(OP.MH_B3) + SUM(OP.MH_B4) + SUM(OP.MH_B5) + SUM(OP.MH_B6) + SUM(OP.MH_C1) + SUM(OP.MH_C2) + SUM(OP.MH_C3) AS MH_TAKE ,
		               SUM(OP.MH_D1) AS MH_D1 ,
		               SUM(NORMAL_TIME) AS NORMAL_TIME ,
		               SUM(OVERTIME) AS OVERTIME ,
		               SUM(SPECIAL_TIME) AS SPECIAL_TIME ,
		               OP.DEPT_CODE
		        FROM   (SELECT DEPT_CODE ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A1 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A2' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A2 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A3' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A3 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A4' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A4 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'A5' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_A5 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 1) = 'A' THEN
		                                         CASE
		                                           WHEN OP_CODE &lt;&gt; 'A13' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         END
		                                         ELSE 0
		                                       END AS MH_IN ,
		                       0 AS MH_OUT ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B1 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B2' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B2 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B3' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B3 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B4' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B4 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B5' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B5 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'B6' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_B6 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'C1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_C1 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'C2' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_C2 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'C3' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_C3 ,
		                                       CASE
		                                         WHEN SUBSTR(OP_CODE, 1, 2) = 'D1' THEN ROUND(NVL(SUM(PLM_MH), 0), 1)
		                                         ELSE 0
		                                       END AS MH_D1 ,
		                       SUM(NORMAL_TIME) AS NORMAL_TIME ,
		                       SUM(OVERTIME) AS OVERTIME ,
		                       SUM(SPECIAL_TIME) AS SPECIAL_TIME
		                FROM   (SELECT EMPLOYEE_NO ,
		                               DEPT_CODE ,
		                               OP_CODE ,
		                               PLM_MH * MH_FACTOR AS PLM_MH ,
		                               NORMAL_TIME * MH_FACTOR AS NORMAL_TIME ,
		                               OVERTIME * MH_FACTOR AS OVERTIME ,
		                               SPECIAL_TIME * MH_FACTOR AS SPECIAL_TIME
		                        FROM   (SELECT EMPLOYEE_NO ,
		                                       DEPT_CODE ,
		                                       OP_CODE ,
		                                       PLM_MH ,
		                                       NORMAL_TIME ,
		                                       OVERTIME ,
		                                       SPECIAL_TIME ,
		                                                                       CASE
		                                                                         WHEN CAREER_MONTHS IS NULL THEN 1
		                                                                         ELSE (SELECT FACTOR_VALUE
		                                        FROM   (SELECT CAREER_MONTH_FROM,
		                                                       CAREER_MONTH_TO,
		                                                       FACTOR_VALUE
		                                                FROM   PLM_DESIGN_MH_FACTOR
		                                                WHERE  1 = 1
		                                                AND    CASE_NO = #{factorCaseList} )
		                                        WHERE  CAREER_MONTH_FROM &lt;= CAREER_MONTHS
		                                        AND    NVL(CAREER_MONTH_TO, 9999) &gt;= CAREER_MONTHS )
		                                                                       END AS MH_FACTOR
		                                FROM   (SELECT DM.EMPLOYEE_NO ,
		                                               DM.DEPT_CODE ,
		                                               DM.OP_CODE ,
		                                               SUM(DM.DIRECT_MH + DM.DIST_MH) AS PLM_MH ,
		                                               SUM(DM.NORMAL_TIME) AS NORMAL_TIME ,
		                                               SUM(DM.OVERTIME) AS OVERTIME ,
		                                               SUM(DM.SPECIAL_TIME) AS SPECIAL_TIME ,
		                                               ((TO_CHAR(DM.WORK_DAY, 'YYYY') - TO_CHAR(CS.DESIGN_APPLY_DATE, 'YYYY'))* 12 + (TO_CHAR(DM.WORK_DAY, 'MM') - TO_CHAR(CS.DESIGN_APPLY_DATE, 'MM'))) +
		                                                                                       CASE
		                                                                                         WHEN TO_CHAR(CS.DESIGN_APPLY_DATE, 'DD') &lt;= 15 THEN 1
		                                                                                         WHEN TO_CHAR(CS.DESIGN_APPLY_DATE, 'DD') &gt; 15 THEN 0
		                                                                                       END + NVL(ROUND(CS.BEFORE_ENTRANCE_CAREER * 12, 0), 0) AS CAREER_MONTHS
		                                        FROM   PLM_DESIGN_MH_CLOSE DM ,
		                                               CCC_SAWON CS
		                                        WHERE  DM.EMPLOYEE_NO = CS.EMPLOYEE_NUM(+)
		                                        AND    DM.WORK_DAY &gt;= TO_DATE(#{dateSelected_from}, 'YYYY-MM-DD')
		                                        AND    DM.WORK_DAY &lt;= TO_DATE(#{dateSelected_to}, 'YYYY-MM-DD') 
		                                        <if test="project_no_list != null and project_no_list.size > 0">
		                                            AND    DM.PROJECT_NO IN (<foreach collection="project_no_list" item="item" separator=",">#{item}</foreach>)
		                                        </if>
		                                        GROUP BY DM.EMPLOYEE_NO, DM.DEPT_CODE, DM.OP_CODE, DM.WORK_DAY, CS.DESIGN_APPLY_DATE, CS.BEFORE_ENTRANCE_CAREER ) ) )
		                GROUP BY DEPT_CODE, OP_CODE
		                UNION ALL
		SELECT ORH.REQUEST_DEPT AS DEPT_CODE ,
		                       0 AS MH_A1 ,
		                       0 AS MH_A2 ,
		                       0 AS MH_A3 ,
		                       0 AS MH_A4 ,
		                       0 AS MH_A5 ,
		                       0 AS MH_IN ,
		                       SUM(OCA.COMPLETED_MAN_HOUR) AS MH_OUT ,
		                       0 AS MH_B1 ,
		                       0 AS MH_B2 ,
		                       0 AS MH_B3 ,
		                       0 AS MH_B4 ,
		                       0 AS MH_B5 ,
		                       0 AS MH_B6 ,
		                       0 AS MH_C1 ,
		                       0 AS MH_C2 ,
		                       0 AS MH_C3 ,
		                       0 AS MH_D1 ,
		                       0 AS NORMAL_TIME ,
		                       0 AS OVERTIME ,
		                       0 AS SPECIAL_TIME
		                FROM   OUT_COMPLETED_AMOUNT OCA,
		                       OUT_CONTRACTS OC,
		                       OUT_REQUEST_HEADERS ORH,
		                       OUT_CODE_LINES OCL,
		                       DCC_DEPTCODE DEPT
		                WHERE  ORH.REQUEST_DEPT = DEPT.DEPTCODE
		                AND    OC.REQUEST_NUM = ORH.REQUEST_NUM
		                AND    ORH.REQUEST_CODE = OCL.COMMON_CODE
		                AND    OCL.INDEX_CODE = 'OUT21'
		                AND    NVL(OCL.END_DATE, SYSDATE) &gt; TRUNC(SYSDATE)
		                AND    OCL.CODE_VALUE = '도면비'
		                AND    OCA.CONTRACT_NUM = OC.CONTRACT_NUM
		                AND    ORH.REQUEST_DEPT NOT IN (SELECT DEPTCODE
		                        FROM   DCC_DEPTCODE A ,
		                               DCC_DWGDEPTCODE T
		                        WHERE  A.DWGDEPTCODE = T.DWGDEPTCODE
		                        AND    T.DWGDEPTCODE = '000049' ) 
		                <if test="project_no_list != null and project_no_list.size > 0">
		                    AND    ORH.PROJECT_NO IN (<foreach collection="project_no_list" item="item" separator=",">#{item}</foreach>)
		                </if>
		                AND    OCA.COMPLETED_DATE &gt;= TO_DATE(TO_CHAR(TO_DATE(#{dateSelected_from}, 'YYYY-MM-DD'), 'YYYYMM'), 'YYYYMM')
		                AND    OCA.COMPLETED_DATE &lt;= LAST_DAY(TO_DATE(#{dateSelected_to}, 'YYYY-MM-DD'))
		                GROUP BY ORH.REQUEST_DEPT ) OP ,
		               (SELECT DEPT_CODE AS DWGDEPTCODE,
		                       DEPT_NAME AS DWGDEPTNM
		                FROM   STX_COM_INSA_DEPT@STXERP.STXSHIP.CO.KR) DW
		        WHERE  OP.DEPT_CODE = DW.DWGDEPTCODE
		        <if test="dept_code_list != null and dept_code_list.size > 0">
				    AND    DW.DWGDEPTCODE IN  (<foreach collection="dept_code_list" item="item" separator=",">#{item}</foreach>)
				</if>
		        GROUP BY DW.DWGDEPTNM, OP.DEPT_CODE )
		ORDER BY ORDER_BY, DWGDEPTNM
	) 
	</select>
 	
</mapper>